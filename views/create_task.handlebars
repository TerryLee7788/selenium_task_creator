{{#section 'style'}}
  <style>
    .it_content {
      position: relative;
    }
    .delete {
      float: right;
      margin-bottom: 6px;
    }
    .it_content:first-child .delete,
    .lists-content [data-name="lists"]:first-child [data-name="delete"] {
      display: none;
    }
    [data-name="add"] {
      margin: 0 10px;
    }
    #error-msg,
    #success-msg {
      margin: 10px 0;
      display: none;
    }
    #test_account:checked + #account-content {
      display: block !important;
    }
    .btn-toolbar+.btn-toolbar {
      margin-top: 10px;
    }
    #account-content {
      margin-top: 14px;
      max-width: 260px;
    }
    .sendKeys {
      display: none;
    }
  </style>
{{/section}}

<div class="starter-template">
  <div class="page-header">
    <h1>Create task page</h1>    
  </div>

  <div id="hide" class="hide">
    {{> action}}
    {{> check}}
    {{> sendkeys}}
  </div>

  <form action="/create_task" method="POST" id="task_form">
    <h2>Basic info</h2>
    <hr/>
    <div id="basic_info">
      <div class="form-group">
        <label for="task_name">Task name ( js file name )</label>
        <input type="text" name="task_name" id="task_name" class="form-control" placeholder="ex: 01_reg_desktop_cover_ffn_gmail" />
      </div>

      {{!-- describe main task --}}
      <div class="form-group">
        <label for="describe">The structure to the test suite:</label>
        <input id="describe" type="text" name="describe" class="form-control" />
      </div>
  
      {{!-- the url --}}
      <div class="form-group">
        <label for="url">The url:</label>
        <input id="url" type="text" name="url" class="form-control" />
      </div>
  
      {{!-- The language --}}
      <p>
        <label for="lang">
          The language:
          {{> langs}}
        </label>
      </p>
  
      {{!-- Test account and password --}}
      <label for="test_account">Do you use test account?</label>
      <input type="checkbox" data-target="account-content" id="test_account" name="test_account" />

      <div id="account-content" data-name="account-content" class="hide">
        <div class="form-group">
          <label for="user">User name</label>
          <input type="text" id="user" name="user" class="form-control" />
        </div>

        <div class="form-group">
          <label for="password">Password</label>
          <input type="password" id="password" name="password" class="form-control" />
        </div>

      </div>
    </div>{{!-- basic_info end --}}
  
    <hr/>
    <h2>Create Steps</h2>
    <hr/>
  
    <div id="create_step">
      {{!-- Basic step --}}
      {{> basic_step}}
    </div>
  
    <div class="btn-toolbar"><button type="button" id="add" class="btn btn-primary">Add Steps</button></div>
    <div class="btn-toolbar"><button id="btn" type="submit" class="btn btn-default">Create task</button>
    </div>
  </form>
  <div class="alert alert-danger" role="alert" id="error-msg"></div>
  <div class="alert alert-success" role="alert" id="success-msg"></div>
</div>

{{#section 'jquery'}}
<script>
  $(function () {
    var tasks = tasks || {},
        $task_form = $('#task_form'),
        $hide = $('#hide'),
        $err_msg = $('#error-msg'),
        $suc_msg = $('#success-msg'),
        $obj = {
          btn:       $task_form.find('#btn'),
          describe:  $task_form.find('#describe'),
          url:       $task_form.find('#url'),
          lang:      $task_form.find('#lang'),
          add:       $task_form.find('#add'),
          account:   $task_form.find('#test_account'),
          steps:     $task_form.find('#create_step')
        },
        lock_ajax = false,
        cache_step = $obj.steps.html(),
        cache_action = $hide.find('.action').html(),
        cache_check = $hide.find('.check').html(),
        cache_sendkeys = $hide.find('.sendKeys').html(),
        cache_list = $obj.steps.find('.lists-content').html(),
    disableBtn = function (data) {
      if (data.success) {
        $obj.btn.text('Created');
        $suc_msg.text(data.message).fadeIn().delay(3000).fadeOut();
      } else {
        $err_msg.text(data.message).fadeIn(1500, function () {
          $obj.btn.prop('disabled', true);
        }).delay(3000).fadeOut(1500, function () {
          $obj.btn.prop('disabled', false);
          lock_ajax = false;
        });
      }
    },
    createTask = function () {
      // disabled the btn
      $obj.btn.prop('disabled', true);

      // lock the ajax function
      if (lock_ajax) { return; }
      lock_ajax = true;

      // setup the config object
      renderData();

      // send ajax
      $.ajax({
        type: 'post',
        url: '/create_task.api',
        dataType: 'json',
        data: tasks.config,
        success: disableBtn
      });
    },
    addSteps = function () {
      $obj.steps.append(cache_step);
    },
    deleteStep = function () {
      $(this).parents('.it_content').remove();
    },
    typeOnChange = function () {
      var $this = $(this),
          val = $this.val(),
          $type_content = $this.parent('label').next('.type_content');

      if (val === 'action') {
        $type_content.html(cache_action);
      } else {
        $type_content.html(cache_check);
      }
    },
    addOrDeleteList = function (e) {
      e.preventDefault();
      var $this = $(this),
          $content = $this.parents('.lists-content'),
          $lists = $this.parents('[data-name="lists"]'),
          data_action = $this.data('name');

      if (data_action === 'add') {
        $lists.after(cache_list);
      } else {
        $lists.remove();
      }
    },
    sendKeys = function () {
      var $this = $(this),
          $send_key = $this.next('span'),
          action_val = $this.val();

      if (action_val === 'sendKey') {
        $send_key.html(cache_sendkeys);
      } else {
        $send_key.html('');
      }
    },
    resetCheckBox = function () {
      var $this = $(this),
          target = $this.data('target');
      // reset account value
      if (!$this.prop("checked")) {
        $('[data-name="'+ target +'"]').find('input').each(function (idx, tar) {
          $(tar).val('');
        });
      }
    },
    renderData = function () {
      $('#basic_info').find('[name]').each(function (idx) {
        var $this = $(this),
            cur_name = $this.attr('name'),
            value = (cur_name === 'test_account') ? ($this.prop('checked')) : ($this.val());
        
        tasks.config[cur_name] = value;
      });

      if (tasks.config.test_account === false) {
        delete tasks.config.user;
        delete tasks.config.password;
      }

      $('.it_content').each(function (outer_idx) {
        var $current = $(this).find('[name="it_name"]'),
            it_name = $current.attr('name'),
            it_des = $current.val(),
            arr = []; // "arr" array reset

        tasks.config.it[outer_idx] = {};

        $(this).find('[data-name="lists"]').each(function (index) {
          var out_idx = index;
          arr[out_idx] = {};
          $(this).find('[name]').each(function (idx, target) {
            var name = $(this).attr('name'),
                boolean_value = /(type|actions)/;
            if (boolean_value.test(name)) {
              var type = $(target).val();
              arr[out_idx][type] = true;
            } else {
              arr[out_idx][name] = $(target).val();              
            }
          });
        });
        // create "events" array object
        tasks.config.it[outer_idx]["events"] = arr;
        tasks.config.it[outer_idx][it_name] = it_des;
      });
      console.log(tasks.config);
    };

    // Main object
    tasks.config = {};
    tasks.config.it = [];

    // Click event
    $obj.btn.on('click', createTask);
    $obj.add.on('click', addSteps);
    $obj.steps.on('click', '.delete', deleteStep);
    $obj.steps.on('click', '.type_content [data-name="add"], .type_content [data-name="delete"]', addOrDeleteList);

    // Change event
    $obj.account.on('change', resetCheckBox);
    $obj.steps.on('change', '[name="type"]', typeOnChange);
    $obj.steps.on('change', '[name="actions"]', sendKeys);
  });
</script>
{{/section}}